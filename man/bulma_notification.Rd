% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/notification.R
\name{bulma_notification}
\alias{bulma_notification}
\title{Create a bulma Notification}
\usage{
bulma_notification(..., color = NULL, light = FALSE)
}
\arguments{
\item{...}{[\verb{html tags} or \verb{html attributes}]\cr
Elements to include within the container.}

\item{color}{[\code{character(1)}: \sQuote{NULL}]\cr
A valid bulma color name.}

\item{light}{[\code{logical(1)}: \sQuote{FALSE}]\cr
If \sQuote{TRUE} the \code{is-light} modifier is used, resulting in a lighter color.}
}
\value{
A bulma \code{notification} element.
}
\description{
Create a bulma Notification
}
\examples{
## Only run examples in interactive R sessions
if (interactive() && requireNamespace("shiny", quietly = TRUE)) {
   text <- tagList(
     "Primar lorem ipsum dolor sit amet, consectetur",
     "adipiscing elit lorem ipsum dolor. ",
     tags$strong("Pellentesque risus mi"),
     "tempus quis placerat ut, porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla.",
     " Nullam gravida purus diam, et dictum ",
     a("felis venenatis"),
     " efficitur."
   )

   cols <- bulma_config[bulma_config$is_color_map_key, "variable"]

   ui <- bulma_page(
     bulma_block(
       bulma_title("Basic Notification"),
       bulma_notification(text)
     ),
     bulma_block(
       bulma_title("Colored Notification"),
       lapply(cols, function(col) bulma_notification(text, color = col))
     ),
     bulma_block(
       bulma_title("Light Colored Notification"),
       lapply(cols, function(col) bulma_notification(text, color = col, light = TRUE))
     )
   )

   server <- function(input, output) {
   }

   shinyApp(ui, server)
}
}
